/*CSS Document */
.hidden {
	display: none !important
}
/* Animation Grid */
.remote {
	grid-area: remote;
	border-top-style: solid;
	border-left-style: solid;
	border-right-style: solid;
}
.local {
	grid-area: local;
	border-top-style: solid;
	border-bottom-style: solid;
	border-left-style: solid;
}
.stage {
	grid-area: stage;
	border-bottom-style: solid;
	border-top-style: solid;
	border-left-style: solid;
}
.text {
	grid-area: text;
	background-color: #000000;
	border-style: solid;
}
@media only screen and (max-width: 1024px) {
	.left {
		width: 100vw;
		height: 35%;
		border: none;
		margin-top: 6em;
	}
	.right {
		width: 100%;
		top: 40%;
		margin-top: 0;
	}

	.split {
		overflow: visible;
	}
	.sidenav {
	  height: 100%;
	  width: 0px;
	  position: fixed;
	  z-index: 2;
	  top: 0;
	  left: 0;
	  background: #000000;
	  overflow: hidden;
	  padding-top: 60px;
	  transition: 0.5s;
	}
	.sidenav a {
  padding: 8px 8px 8px 32px;
  text-decoration: none;
  font-size: 25px;
  display: block;
  transition: 0.3s;
	float:none;
	}
	footer span a {
		margin-right: 1em;
	}
	/* positioning for each class in CSS Grid */
	/*CSS Grid for header */
	header img {
		grid-area: logo;
		height: 4em;
		margin: 0 auto 0 45%;
	}
	nav {
		grid-area: nav;
	}

	header {
		display: grid;
		grid-template-columns: 5% auto;
		grid-template-areas:
			'nav logo';
		grid-gap: 10px;
		padding: 10px;
		width: 100%;
		position: relative;
	  top: 0;
		z-index: 2;
	  background: #000000;
	}

	/*CSS Grid intro container*/
	.title { grid-area: title;}
	.intro1 { grid-area: para1;}
	.intro2 { grid-area: para2;}
	.tagline { grid-area: tagline; }
	.intro {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	    	'title'
	      'para1'
	      'para2'
	      'tagline';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}

	/*CSS Grid setup container*/
	.but1 { grid-area: but1; } /* .but1 class given area but1 */
	.but2 { grid-area: but2; } /* .but2 class given area but2 */
	.but3 { grid-area: but3; }  /* .but3 class given area but3 */
	.settitle { grid-area: settitle; }  /* .settitle class given area settitle */
	.setpar { grid-area: setpar; } /* .setpar class given area setpar */
	#letsgo { grid-area: next; }  /* #letsgo ID given area next */
	#setup {
		display: grid;  /* this sets the grid*/
		grid-template-columns: auto;  /* This sets THREE auto sized columns in the grid*/
		grid-template-areas:
		'settitle'  /* this is the first row of the grid, with 1 area spanning over 3*/
		'setpar'  /* this is the second row of grid, with 1 area spanning over 3*/
		'but1'
		'but2'
		'but3'  /* this is the third row of the grid, with 3 buttons in a row*/
		'next';  /* this is the fourth row of the grid, with a gap in the first and third column*/
		grid-gap: 10px;  /* this sets a gap between each part of the grid*/
		padding: 10px;  /* simple padding on the grid*/
		width: 60%;  /* this grid is set to 60% width of the page*/
		margin: 0 auto 2em auto;  /* centre the grid*/
	}

	/*CSS Grid workflow container*/
	.worktitle { grid-area: worktitle; }
	.workpar { grid-area: workpar; }
	#workdir { grid-area: workdir; }
	#index { grid-area: index; }
	#head { grid-area: head; }
	.workdirtext { grid-area: workdirtext; }
	#indextext { grid-area: indextext; }
	.headtext { grid-area: headtext; }
	#addarrow { display: none; }
	#comarrow { display: none;}
	#coding { grid-area: coding; }
	#workdirt { grid-area: workdirt; }
	#indext { grid-area: indext; }
	#headt { grid-area: headt; }

	#workflow {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
		'worktitle'
		'workpar'
		'workdirt'
		'workdir'
		'workdirtext'
		'indext'
		'index'
		'indextext'
		'headt'
		'head'
		'headtext'
		'coding';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto 2em auto;
	}
	/* CSS Grid for Animations before Branches */
	.title {grid-area: title;}
	.next {grid-area: next;}
	.createfile {grid-area: next;}
	.connectrepository {grid-area: next;}
	#createend {grid-area: next;}
	.setuser {grid-area: next;}
	#setuserend {grid-area: next;}
	.addfile {grid-area: next;}
	.commitfile {grid-area: next;}
	#addcommitend {grid-area: next;}
	.pushfile {grid-area: next;}
	#pushend {grid-area: next;}
	.pullfile {grid-area: next;}
	#pullend {grid-area: next;}

	.animgrid {
		display: grid;
		grid-template-columns: 50% 25% 25%;
		grid-template-rows: 6% 5% 45% 45% 0%;
		grid-template-areas:
			'title title title'
			'title title title'
			'remote remote text'
			'local stage text'
			'. . next';
			margin-bottom: -120px;
			width: 60em;
			height: 30em;
			position: static;
	}
	/* CSS Grid for Branching animations */
	#branchtitle {grid-area: next;}
	#branching {grid-area: next;}
	#branchpush {grid-area: next;}
	#mergebranch {grid-area: next;}
	#addbranch2 {grid-area: next;}
	#delbranch {grid-area: next;}
	#nextstep {grid-area: next;}

	.branchanim {
		display: grid;
		grid-template-columns: 50% 25% 25%;
		grid-template-rows: 5% 5% 45% 45% 0%;
		grid-template-areas:
			'title title title'
			'title title title'
			'remote remote text'
			'local stage text'
			'. . next';
			margin-bottom: -120px;
			width: 60em;
			height: 30em;
	}

	/*CSS Grid create container*/
	.cpar { grid-area: cpar; }
	.cpar2 { grid-area: cpar2; }
	.init { grid-area: init; }
	.checkpar { grid-area: checkpar; }
	.clone1 { grid-area: clone1; }
	.checkpar2 { grid-area: checkpar2; }
	.clone2 { grid-area: clone2; }

	#create {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'cpar'
	      'init'
				'cpar2'
				'cpar3'
				'init2'
				'cpar4'
				'checkpar'
				'clone1'
				'checkpar2'
				'clone2';
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid create container*/
	.setuserpar { grid-area: userpar1; }
	.config1 { grid-area: config1; }
	.config2 { grid-area: config2; }
	.setuserpar1 { grid-area: userpar2; }

	#setuserinfo {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'userpar1'
	      'config1'
				'config2'
				'userpar2';
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid Add and Commit container*/
	.acpar { grid-area: acpar; }
	.acpar1 { grid-area: acpar1; }
	.add1 { grid-area: add1; }
	.add2 { grid-area: add2; }
	.acpar2 { grid-area: acpar2; }
	.commit1 { grid-area: commit1; }
	.acpar3 { grid-area: acpar3; }

	#addcommit {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'acpar'
				'acpar1'
	      'add1'
				'add2'
				'acpar2'
				'commit1'
				'acpar3';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}
	/*CSS Grid Pushing container*/
	.pushpar { grid-area: pushpar; }
	.pushpar1 { grid-area: pushpar1; }
	.push1 { grid-area: push1; }
	.push2 { grid-area: push2; }
	.pushpar2 { grid-area: pushpar2; }
	.push3 { grid-area: push3; }
	.pushpar3 { grid-area: pushpar3; }

	#pushcommit {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'pushpar'
				'push1'
	      'pushpar1'
				'push2'
				'pushpar2'
				'push3'
				'pushpar3';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid Pushing container*/
	.pullpar { grid-area: pullpar; }
	.pullpar1 { grid-area: pullpar1; }
	.pull1 { grid-area: pull1; }
	.pullpar2 { grid-area: pullpar2; }

	#gitpull {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'pullpar'
				'pullpar1'
				'pull1'
	      'pullpar2';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid Branches container*/
	.brpar { grid-area: brpar; }
	.brpar1 { grid-area: brpar1; }
	.brpar2 { grid-area: brpar2; }
	.branch1 { grid-area: branch1; }
	.brpar3 { grid-area: brpar3; }
	.branch2 { grid-area: branch2; }
	.brpar4 { grid-area: brpar4; }
	.branch3 { grid-area: branch3; }
	.brpar5 { grid-area: brpar5; }
	.branch4 { grid-area: branch4; }

	#branches {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'brpar'
				'brpar1'
	      'brpar2'
				'branch1'
				'brpar3'
				'branch2'
				'brpar4'
				'branch3'
				'brpar5'
				'branch4';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}
	/*CSS Grid Update and Merge container*/
	.uppar { grid-area: uppar; }
	.merge1 { grid-area: merge1; }
	.uppar1 { grid-area: uppar1; }
	.uppar2 { grid-area: uppar2; }
	.uppar3 { grid-area: uppar3; }
	.merge2 { grid-area: merge2; }
	.uppar4 { grid-area: uppar4; }
	.merge3 { grid-area: merge3; }
	.uppar5 { grid-area: uppar5; }

	#updatemerge {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'uppar'
				'merge1'
				'uppar1'
	      'uppar2'
				'uppar3'
				'merge2'
				'uppar4'
				'merge3'
				'uppar5';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: 1s forwards;
	}
	/*CSS Grid Tagging container*/
	.tagtitle {grid-area: tagtitle;}
	.tagpar { grid-area: tagpar; }
	.tag1 { grid-area: tag1; }
	.tagpar1 { grid-area: tagpar1; }
	.tagpar2 { grid-area: tagpar2; }
	#nextlog {grid-area: nextbtn}


	#tag {
		display: grid;
		grid-template-columns: auto auto auto;
		grid-template-areas:
				'tagtitle tagtitle tagtitle'
	      'tagpar tagpar tagpar'
				'tag1 tag1 tag1'
				'tagpar1 tagpar1 tagpar1'
	      'tagpar2 tagpar2 tagpar2'
				'. nextbtn .';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto 2em auto;
	}
	/*CSS Grid log container*/
	.logtitle {grid-area: logtitle;}
	.logpar { grid-area: logpar; }
	.log1 { grid-area: log1; }
	.logpar1 { grid-area: logpar1; }
	.logpar2 { grid-area: logpar2; }
	.log2 { grid-area: log2; }
	.logpar3 { grid-area: logpar3; }
	.log3 { grid-area: log3; }
	.logpar4 { grid-area: logpar4; }
	.log4 { grid-area: log4; }
	.logpar5 { grid-area: logpar5; }
	.log5 { grid-area: log5; }


	#log {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
				'logtitle'
	      'logpar'
				'log1'
				'logpar1'
	      'logpar2'
				'log2'
				'logpar3'
				'log3'
				'logpar4'
				'log4'
				'logpar5'
				'log5';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto 2em auto;
	}
	/*CSS Grid error container*/
	.ertitle {grid-area: ertitle;}
	.erpar { grid-area: erpar; }
	.error1 { grid-area: error1; }
	.erpar1 { grid-area: erpar1; }
	.erpar2 { grid-area: erpar2; }
	.error2 { grid-area: error2; }
	.erpar3 { grid-area: erpar3; }
	.error3 { grid-area: error3; }
	#nexttag {grid-area: nextbtn	}


	#error {
		display: grid;
		grid-template-columns: auto auto auto;
		grid-template-areas:
				'ertitle ertitle ertitle'
				'erpar erpar erpar'
				'error1 error1 error1'
				'erpar1 erpar1 erpar1'
				'erpar2 erpar2 erpar2'
				'error2 error2 error2'
				'erpar3 erpar3 erpar3'
				'error3 error3 error3'
				' . nextbtn .';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto 2em auto;
	}
}
@media only screen and (min-width: 1025px) {
	/* positioning for each class in CSS Grid */
	/*CSS Grid for header */
	.hide {
		display: none;
	}
	header img {grid-area: logo;}
	nav {grid-area: nav;}
	.sidenav {
		width: 100vw !important;
	}

	header {
		display: grid;
		grid-template-columns: 5% auto;
		grid-template-areas:
			'logo nav';
		grid-gap: 10px;
		padding: 10px;
		width: 100%;
		position: relative;
	  top: 0;
		z-index: 2;
	  background: #000000;
	}
	/*CSS Grid to order page */
	/* #left {grid-area: anim;}
	#right {grid-area: text;}
	.pagegrid {
		display: grid;
		grid-template-columns: 75% 25%;
		grid-template-areas:
		'anim text';
		width: 100vw;
		height: 100vh;
	} */

	/*CSS Grid intro container*/
	.title { grid-area: title;}
	.intro1 { grid-area: para1;}
	.intro2 { grid-area: para2;}
	.tagline { grid-area: tagline; }
	.intro {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	    	'title'
	      'para1'
	      'para2'
	      'tagline';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}

	/*CSS Grid setup container*/
	.but1 { grid-area: but1; } /* .but1 class given area but1 */
	.but2 { grid-area: but2; } /* .but2 class given area but2 */
	.but3 { grid-area: but3; }  /* .but3 class given area but3 */
	.settitle { grid-area: settitle; }  /* .settitle class given area settitle */
	.setpar { grid-area: setpar; } /* .setpar class given area setpar */
	#letsgo { grid-area: next; }  /* #letsgo ID given area next */
	#setup {
		display: grid;  /* this sets the grid*/
		grid-template-columns: auto auto auto;  /* This sets THREE auto sized columns in the grid*/
		grid-template-areas:
		'settitle settitle settitle'  /* this is the first row of the grid, with 1 area spanning over 3*/
		'setpar setpar setpar'  /* this is the second row of grid, with 1 area spanning over 3*/
		'but1 but2 but3'  /* this is the third row of the grid, with 3 buttons in a row*/
		'. next .';  /* this is the fourth row of the grid, with a gap in the first and third column*/
		grid-gap: 10px;  /* this sets a gap between each part of the grid*/
		padding: 10px;  /* simple padding on the grid*/
		width: 60%;  /* this grid is set to 60% width of the page*/
		margin: 0 auto;  /* centre the grid*/
	}

	/*CSS Grid workflow container*/
	.worktitle { grid-area: worktitle; }
	.workpar { grid-area: workpar; }
	#workdir { grid-area: workdir; }
	#index { grid-area: index; }
	#head { grid-area: head; }
	.workdirtext { grid-area: workdirtext; }
	#indextext { grid-area: indextext; }
	.headtext { grid-area: headtext; }
	#addarrow { grid-area: addarrow; }
	#comarrow { grid-area: comarrow;}
	#coding { grid-area: coding; }
	#workdirt { grid-area: workdirt; }
	#indext { grid-area: indext; }
	#headt { grid-area: headt; }

	#workflow {
		display: grid;
		grid-template-columns: auto auto auto auto auto;
		grid-template-areas:
		'worktitle worktitle worktitle worktitle worktitle'
		'workpar workpar workpar workpar workpar'
		'workdirt . indext . headt'
		'workdir addarrow index comarrow head'
		'workdirtext . indextext . headtext'
		'. coding coding coding .';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}
	/* CSS Grid for Animations before Branches */
	.title {grid-area: title;}
	.next {grid-area: next;}
	.createfile {grid-area: next;}
	.connectrepository {grid-area: next;}
	#createend {grid-area: next;}
	.setuser {grid-area: next;}
	#setuserend {grid-area: next;}
	.addfile {grid-area: next;}
	.commitfile {grid-area: next;}
	#addcommitend {grid-area: next;}
	.pushfile {grid-area: next;}
	#pushend {grid-area: next;}
	.pullfile {grid-area: next;}
	#pullend {grid-area: next;}

	.animgrid {
		display: grid;
		grid-template-columns: 50% 25% 25%;
		grid-template-rows: 6% 5% 45% 45% 0%;
		grid-template-areas:
			'title title title'
			'title title title'
			'remote remote text'
			'local stage text'
			'. . next';
			margin-bottom: -120px;
			width: 60em;
			height: 30em;
			position: static;
	}
	/* CSS Grid for Branching animations */
	#branchtitle {grid-area: next;}
	#branching {grid-area: next;}
	#branchpush {grid-area: next;}
	#mergebranch {grid-area: next;}
	#addbranch2 {grid-area: next;}
	#delbranch {grid-area: next;}
	#nextstep {grid-area: next;}

	.branchanim {
		display: grid;
		grid-template-columns: 50% 25% 25%;
		grid-template-rows: 5% 5% 45% 45% 0%;
		grid-template-areas:
			'title title title'
			'title title title'
			'remote remote text'
			'local stage text'
			'. . next';
			margin-bottom: -120px;
			width: 60em;
			height: 30em;
	}

	/*CSS Grid create container*/
	.cpar { grid-area: cpar; }
	.cpar2 { grid-area: cpar2; }
	.init { grid-area: init; }
	.checkpar { grid-area: checkpar; }
	.clone1 { grid-area: clone1; }
	.checkpar2 { grid-area: checkpar2; }
	.clone2 { grid-area: clone2; }

	#create {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'cpar'
	      'init'
				'cpar2'
				'cpar3'
				'init2'
				'cpar4'
				'checkpar'
				'clone1'
				'checkpar2'
				'clone2';
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid create container*/
	.setuserpar { grid-area: userpar1; }
	.config1 { grid-area: config1; }
	.config2 { grid-area: config2; }
	.setuserpar1 { grid-area: userpar2; }

	#setuserinfo {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'userpar1'
	      'config1'
				'config2'
				'userpar2';
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid Add and Commit container*/
	.acpar { grid-area: acpar; }
	.acpar1 { grid-area: acpar1; }
	.add1 { grid-area: add1; }
	.add2 { grid-area: add2; }
	.acpar2 { grid-area: acpar2; }
	.commit1 { grid-area: commit1; }
	.acpar3 { grid-area: acpar3; }

	#addcommit {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'acpar'
				'acpar1'
	      'add1'
				'add2'
				'acpar2'
				'commit1'
				'acpar3';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}
	/*CSS Grid Pushing container*/
	.pushpar { grid-area: pushpar; }
	.pushpar1 { grid-area: pushpar1; }
	.push1 { grid-area: push1; }
	.push2 { grid-area: push2; }
	.pushpar2 { grid-area: pushpar2; }
	.push3 { grid-area: push3; }
	.pushpar3 { grid-area: pushpar3; }

	#pushcommit {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'pushpar'
				'push1'
	      'pushpar1'
				'push2'
				'pushpar2'
				'push3'
				'pushpar3';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid Pushing container*/
	.pullpar { grid-area: pullpar; }
	.pullpar1 { grid-area: pullpar1; }
	.pull1 { grid-area: pull1; }
	.pullpar2 { grid-area: pullpar2; }

	#gitpull {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'pullpar'
				'pullpar1'
				'pull1'
	      'pullpar2';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: fadeIn 1s forwards;
	}

	/*CSS Grid Branches container*/
	.brpar { grid-area: brpar; }
	.brpar1 { grid-area: brpar1; }
	.brpar2 { grid-area: brpar2; }
	.branch1 { grid-area: branch1; }
	.brpar3 { grid-area: brpar3; }
	.branch2 { grid-area: branch2; }
	.brpar4 { grid-area: brpar4; }
	.branch3 { grid-area: branch3; }
	.brpar5 { grid-area: brpar5; }
	.branch4 { grid-area: branch4; }

	#branches {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'brpar'
				'brpar1'
	      'brpar2'
				'branch1'
				'brpar3'
				'branch2'
				'brpar4'
				'branch3'
				'brpar5'
				'branch4';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}
	/*CSS Grid Update and Merge container*/
	.uppar { grid-area: uppar; }
	.merge1 { grid-area: merge1; }
	.uppar1 { grid-area: uppar1; }
	.uppar2 { grid-area: uppar2; }
	.uppar3 { grid-area: uppar3; }
	.merge2 { grid-area: merge2; }
	.uppar4 { grid-area: uppar4; }
	.merge3 { grid-area: merge3; }
	.uppar5 { grid-area: uppar5; }

	#updatemerge {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
	      'uppar'
				'merge1'
				'uppar1'
	      'uppar2'
				'uppar3'
				'merge2'
				'uppar4'
				'merge3'
				'uppar5';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
		animation: 1s forwards;
	}
	/*CSS Grid Tagging container*/
	.tagtitle {grid-area: tagtitle;}
	.tagpar { grid-area: tagpar; }
	.tag1 { grid-area: tag1; }
	.tagpar1 { grid-area: tagpar1; }
	.tagpar2 { grid-area: tagpar2; }


	#tag {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
				'tagtitle'
	      'tagpar'
				'tag1'
				'tagpar1'
	      'tagpar2';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}
	/*CSS Grid log container*/
	.logtitle {grid-area: logtitle;}
	.logpar { grid-area: logpar; }
	.log1 { grid-area: log1; }
	.logpar1 { grid-area: logpar1; }
	.logpar2 { grid-area: logpar2; }
	.log2 { grid-area: log2; }
	.logpar3 { grid-area: logpar3; }
	.log3 { grid-area: log3; }
	.logpar4 { grid-area: logpar4; }
	.log4 { grid-area: log4; }
	.logpar5 { grid-area: logpar5; }
	.log5 { grid-area: log5; }


	#log {
		display: grid;
		grid-template-columns: auto;
		grid-template-areas:
				'logtitle'
	      'logpar'
				'log1'
				'logpar1'
	      'logpar2'
				'log2'
				'logpar3'
				'log3'
				'logpar4'
				'log4'
				'logpar5'
				'log5';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}
	/*CSS Grid error container*/
	.ertitle {grid-area: ertitle;}
	.erpar { grid-area: erpar; }
	.error1 { grid-area: error1; }
	.erpar1 { grid-area: erpar1; }
	.erpar2 { grid-area: erpar2; }
	.error2 { grid-area: error2; }
	.erpar3 { grid-area: erpar3; }
	.error3 { grid-area: error3; }
	#nexttag { grid-area: nextbtn; }


	#error {
		display: grid;
		grid-template-columns: auto auto auto;
		grid-template-areas:
				'ertitle ertitle ertitle'
				'erpar erpar erpar'
				'error1 error1 error1'
				'erpar1 erpar1 erpar1'
				'erpar2 erpar2 erpar2'
				'error2 error2 error2'
				'erpar3 erpar3 erpar3'
				'error3 error3 error3'
				' . nextbtn .';
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	}
	}
	/* .grid {
		display: grid;
		grid-template-columns: 33.3% 33.3% 33.3%;
		grid-template-areas:
			'title title title'
			'par1 par1 par1'
			'but1 but2 but3'
			'tree1 tree2 tree3'
			'par1inf '
		grid-gap: 10px;
		padding: 10px;
		width: 60%;
		margin: 0 auto;
	} */
}
